import { Directive, Output, EventEmitter, HostListener, ElementRef, Input } from "@angular/core";
var OutsideClick = (function () {
    function OutsideClick(el) {
        this.el = el;
        this.strict = false;
        this.outsideClick = new EventEmitter(false);
    }
    OutsideClick.prototype.documentClick = function (event) {
        var target = event.target; //Get the element in the DOM on which the mouse was clicked
        var host = this.el.nativeElement; //Get the current actionMenu native HTML element
        if (target === host) {
            return;
        }
        if (!this.strict && host.contains(target)) {
            return;
        }
        this.outsideClick.emit(event);
    };
    return OutsideClick;
}());
export { OutsideClick };
OutsideClick.decorators = [
    { type: Directive, args: [{
                selector: "[clrOutsideClick]"
            },] },
];
/** @nocollapse */
OutsideClick.ctorParameters = function () { return [
    { type: ElementRef, },
]; };
OutsideClick.propDecorators = {
    'strict': [{ type: Input, args: ["clrStrict",] },],
    'outsideClick': [{ type: Output, args: ["clrOutsideClick",] },],
    'documentClick': [{ type: HostListener, args: ["document:click", ["$event"],] },],
};
//# sourceMappingURL=outside-click.js.map