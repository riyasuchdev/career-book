/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component } from "@angular/core";
import { ClrResponsiveNavigationService } from "./clrResponsiveNavigationService";
import { ClrResponsiveNavCodes } from "./clrResponsiveNavCodes";
var Header = (function () {
    function Header(responsiveNavService) {
        this.responsiveNavService = responsiveNavService;
        this.isNavLevel1OnPage = false;
        this.isNavLevel2OnPage = false;
    }
    Header.prototype.ngOnInit = function () {
        var _this = this;
        this._subscription = this.responsiveNavService.registeredNavs.subscribe({
            next: function (navLevelList) {
                _this.initializeNavTriggers(navLevelList);
            }
        });
    };
    Object.defineProperty(Header.prototype, "responsiveNavCodes", {
        //getter to access the responsive navigation codes from the template
        get: function () {
            return ClrResponsiveNavCodes;
        },
        enumerable: true,
        configurable: true
    });
    //reset triggers. handles cases when an application has different nav levels on different pages.
    Header.prototype.resetNavTriggers = function () {
        this.isNavLevel1OnPage = false;
        this.isNavLevel2OnPage = false;
    };
    //decides which triggers to show on the header
    Header.prototype.initializeNavTriggers = function (navList) {
        var _this = this;
        this.resetNavTriggers();
        if (navList.length > 2) {
            console.error("More than 2 Nav Levels detected.");
            return;
        }
        navList.forEach(function (navLevel) {
            if (navLevel === ClrResponsiveNavCodes.NAV_LEVEL_1) {
                _this.isNavLevel1OnPage = true;
            }
            else if (navLevel === ClrResponsiveNavCodes.NAV_LEVEL_2) {
                _this.isNavLevel2OnPage = true;
            }
        });
    };
    //closes the nav that is open
    Header.prototype.closeOpenNav = function () {
        this.responsiveNavService.closeAllNavs();
    };
    //toggles the nav that is open
    Header.prototype.toggleNav = function (navLevel) {
        this.responsiveNavService.sendControlMessage(ClrResponsiveNavCodes.NAV_TOGGLE, navLevel);
    };
    Header.prototype.ngOnDestroy = function () {
        this._subscription.unsubscribe();
    };
    return Header;
}());
export { Header };
Header.decorators = [
    { type: Component, args: [{
                selector: "clr-header",
                template: "\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    ",
                host: { "[class.header]": "true" }
            },] },
];
/** @nocollapse */
Header.ctorParameters = function () { return [
    { type: ClrResponsiveNavigationService, },
]; };
//# sourceMappingURL=header.js.map