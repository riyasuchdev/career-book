/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from "@angular/core";
import { Subject } from "rxjs/Subject";
var RowExpand = (function () {
    function RowExpand() {
        this.expandable = false;
        this.replace = false;
        this._loading = false;
        this._expanded = false;
        this._animate = new Subject();
        this._expandChange = new Subject();
    }
    Object.defineProperty(RowExpand.prototype, "loading", {
        get: function () {
            return this._loading;
        },
        set: function (value) {
            value = !!value;
            if (value !== this._loading) {
                this._loading = value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowExpand.prototype, "expanded", {
        get: function () {
            return this._expanded;
        },
        set: function (value) {
            value = !!value;
            if (value !== this._expanded) {
                this._expanded = value;
                this._animate.next();
                this._expandChange.next(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowExpand.prototype, "animate", {
        get: function () {
            return this._animate.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RowExpand.prototype, "expandChange", {
        get: function () {
            return this._expandChange.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    RowExpand.prototype.startLoading = function () {
        this.loading = true;
    };
    RowExpand.prototype.doneLoading = function () {
        this.loading = false;
        this._animate.next();
    };
    return RowExpand;
}());
export { RowExpand };
RowExpand.decorators = [
    { type: Injectable },
];
/** @nocollapse */
RowExpand.ctorParameters = function () { return []; };
//# sourceMappingURL=row-expand.js.map