/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, Input, IterableDiffers, TemplateRef } from "@angular/core";
import { Items } from "./providers/items";
var DatagridItems = (function () {
    function DatagridItems(template, _differs, _items) {
        this.template = template;
        this._differs = _differs;
        this._items = _items;
        _items.smartenUp();
    }
    Object.defineProperty(DatagridItems.prototype, "rawItems", {
        set: function (items) {
            this._rawItems = items ? items : [];
        },
        enumerable: true,
        configurable: true
    });
    DatagridItems.prototype.ngOnChanges = function (changes) {
        if ("rawItems" in changes) {
            var currentItems = changes["rawItems"].currentValue;
            if (!this._differ && currentItems) {
                this._differ = this._differs.find(currentItems).create(this._items.trackBy);
            }
        }
    };
    Object.defineProperty(DatagridItems.prototype, "trackBy", {
        set: function (value) {
            this._items.trackBy = value;
        },
        enumerable: true,
        configurable: true
    });
    DatagridItems.prototype.ngDoCheck = function () {
        if (this._differ) {
            var changes = this._differ.diff(this._rawItems);
            if (changes) {
                // TODO: not very efficient right now,
                // but premature optimization is the root of all evil.
                this._items.all = this._rawItems;
            }
        }
    };
    return DatagridItems;
}());
export { DatagridItems };
DatagridItems.decorators = [
    { type: Directive, args: [{
                selector: "[clrDgItems][clrDgItemsOf]",
            },] },
];
/** @nocollapse */
DatagridItems.ctorParameters = function () { return [
    { type: TemplateRef, },
    { type: IterableDiffers, },
    { type: Items, },
]; };
DatagridItems.propDecorators = {
    'rawItems': [{ type: Input, args: ["clrDgItemsOf",] },],
    'trackBy': [{ type: Input, args: ["clrDgItemsTrackBy",] },],
};
//# sourceMappingURL=datagrid-items.js.map