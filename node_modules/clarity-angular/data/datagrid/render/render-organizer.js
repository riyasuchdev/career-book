/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Injectable } from "@angular/core";
import { Subject } from "rxjs/Subject";
var DatagridRenderOrganizer = (function () {
    function DatagridRenderOrganizer() {
        this.widths = [];
        this._clearWidths = new Subject();
        this._tableMode = new Subject();
        this._computeWidths = new Subject();
        this._alignColumns = new Subject();
        this.scrollbar = new Subject();
        this.scrollbarWidth = new Subject();
        this._done = new Subject();
    }
    Object.defineProperty(DatagridRenderOrganizer.prototype, "clearWidths", {
        get: function () {
            return this._clearWidths.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatagridRenderOrganizer.prototype, "tableMode", {
        get: function () {
            return this._tableMode.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatagridRenderOrganizer.prototype, "computeWidths", {
        get: function () {
            return this._computeWidths.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatagridRenderOrganizer.prototype, "alignColumns", {
        get: function () {
            return this._alignColumns.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatagridRenderOrganizer.prototype, "done", {
        get: function () {
            return this._done.asObservable();
        },
        enumerable: true,
        configurable: true
    });
    DatagridRenderOrganizer.prototype.resize = function () {
        this.widths.length = 0;
        this._clearWidths.next();
        this._tableMode.next(true);
        this._computeWidths.next();
        this._tableMode.next(false);
        this._alignColumns.next();
        this.scrollbar.next();
        this._done.next();
    };
    return DatagridRenderOrganizer;
}());
export { DatagridRenderOrganizer };
DatagridRenderOrganizer.decorators = [
    { type: Injectable },
];
/** @nocollapse */
DatagridRenderOrganizer.ctorParameters = function () { return []; };
//# sourceMappingURL=render-organizer.js.map