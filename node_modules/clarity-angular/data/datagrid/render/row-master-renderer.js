/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, ViewContainerRef, ViewChild } from "@angular/core";
import { DatagridRenderOrganizer } from "./render-organizer";
/**
 * This component serves as a conditional wrapper.
 * When in table mode, it puts its content next to itself rather than inside.
 */
var DatagridRowMasterRenderer = (function () {
    function DatagridRowMasterRenderer(outsideContainer, organizer) {
        this.outsideContainer = outsideContainer;
        this.organizer = organizer;
        this.outside = false;
    }
    DatagridRowMasterRenderer.prototype.ngOnDestroy = function () {
        this.subscription.unsubscribe();
    };
    DatagridRowMasterRenderer.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.insideContainer.createEmbeddedView(this.projected);
        this.subscription = this.organizer.tableMode.subscribe(function (on) { return _this.projectOutside(on); });
    };
    DatagridRowMasterRenderer.prototype.projectOutside = function (outside) {
        // We know the datagrid row's master container is always the first element in it,
        // so hard-coding a zero index here is fine.
        if (outside && !this.outside) {
            this.outsideContainer.insert(this.insideContainer.detach(0), 0);
        }
        else if (!outside && this.outside) {
            this.insideContainer.insert(this.outsideContainer.detach(0), 0);
        }
        this.outside = outside;
    };
    return DatagridRowMasterRenderer;
}());
export { DatagridRowMasterRenderer };
DatagridRowMasterRenderer.decorators = [
    { type: Component, args: [{
                selector: "clr-dg-row-master",
                template: "\n        <ng-template #projected><ng-content></ng-content></ng-template>\n        <ng-container #inside></ng-container>\n    ",
                host: {
                    "[class.datagrid-row-master]": "true"
                }
            },] },
];
/** @nocollapse */
DatagridRowMasterRenderer.ctorParameters = function () { return [
    { type: ViewContainerRef, },
    { type: DatagridRenderOrganizer, },
]; };
DatagridRowMasterRenderer.propDecorators = {
    'insideContainer': [{ type: ViewChild, args: ["inside", { read: ViewContainerRef },] },],
    'projected': [{ type: ViewChild, args: ["projected",] },],
};
//# sourceMappingURL=row-master-renderer.js.map