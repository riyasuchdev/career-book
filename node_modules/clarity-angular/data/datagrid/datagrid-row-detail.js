/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Input, ContentChildren } from "@angular/core";
import { RowExpand } from "./providers/row-expand";
import { Selection, SelectionType } from "./providers/selection";
import { RowActionService } from "./providers/row-action-service";
import { DatagridCell } from "./datagrid-cell";
/**
 * Generic bland container serving various purposes for Datagrid.
 * For instance, it can help span a text over multiple rows in detail view.
 */
var DatagridRowDetail = (function () {
    function DatagridRowDetail(selection, rowActionService, expand) {
        this.selection = selection;
        this.rowActionService = rowActionService;
        this.expand = expand;
        /* reference to the enum so that template can access it */
        this.SELECTION_TYPE = SelectionType;
    }
    Object.defineProperty(DatagridRowDetail.prototype, "replace", {
        get: function () {
            return this.expand.replace;
        },
        set: function (value) {
            this.expand.replace = !!value;
        },
        enumerable: true,
        configurable: true
    });
    return DatagridRowDetail;
}());
export { DatagridRowDetail };
DatagridRowDetail.decorators = [
    { type: Component, args: [{
                selector: "clr-dg-row-detail",
                template: "\n        <ng-container *ngIf=\"!replace\">\n            <clr-dg-cell class=\"datagrid-fixed-column\"\n                *ngIf=\"selection.selectionType === SELECTION_TYPE.Multi \n                    || selection.selectionType === SELECTION_TYPE.Single\"></clr-dg-cell>\n            <clr-dg-cell *ngIf=\"rowActionService.hasActionableRow\" class=\"datagrid-fixed-column\"></clr-dg-cell>\n            <clr-dg-cell class=\"datagrid-fixed-column\"></clr-dg-cell>\n        </ng-container>\n        <ng-content></ng-content>\n    ",
                host: {
                    "[class.datagrid-row-flex]": "true",
                    "[class.datagrid-row-detail]": "!replace",
                    "[class.datagrid-container]": "cells.length === 0",
                }
            },] },
];
/** @nocollapse */
DatagridRowDetail.ctorParameters = function () { return [
    { type: Selection, },
    { type: RowActionService, },
    { type: RowExpand, },
]; };
DatagridRowDetail.propDecorators = {
    'cells': [{ type: ContentChildren, args: [DatagridCell,] },],
    'replace': [{ type: Input, args: ["clrDgReplace",] },],
};
//# sourceMappingURL=datagrid-row-detail.js.map