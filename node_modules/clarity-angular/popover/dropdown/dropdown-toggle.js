/*
 * Copyright (c) 2016 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Directive, HostListener } from "@angular/core";
import { Dropdown } from "./dropdown";
var DropdownToggle = (function () {
    function DropdownToggle(_dropdown) {
        this._dropdown = _dropdown;
        this.isRootLevelToggle = true;
        // if the containing dropdown has a parent, then this is not the root level one
        if (_dropdown.parent) {
            this.isRootLevelToggle = false;
        }
    }
    Object.defineProperty(DropdownToggle.prototype, "active", {
        get: function () {
            return this._dropdown.open;
        },
        enumerable: true,
        configurable: true
    });
    DropdownToggle.prototype.onDropdownToggleClick = function () {
        this._dropdown.toggleDropdown();
    };
    return DropdownToggle;
}());
export { DropdownToggle };
DropdownToggle.decorators = [
    { type: Directive, args: [{
                selector: "[clrDropdownToggle]",
                host: {
                    "[class.dropdown-toggle]": "isRootLevelToggle",
                    "[class.dropdown-item]": "!isRootLevelToggle",
                    "[class.expandable]": "!isRootLevelToggle",
                    "[class.active]": "active"
                }
            },] },
];
/** @nocollapse */
DropdownToggle.ctorParameters = function () { return [
    { type: Dropdown, },
]; };
DropdownToggle.propDecorators = {
    'onDropdownToggleClick': [{ type: HostListener, args: ["click",] },],
};
//# sourceMappingURL=dropdown-toggle.js.map