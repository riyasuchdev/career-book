/*
 * Copyright (c) 2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Input } from "@angular/core";
import { Point } from "../common/popover";
var tooltipDirections = [
    "bottom-left",
    "bottom-right",
    "top-left",
    "top-right",
    "right",
    "left"
];
var tooltipSizes = [
    "xs",
    "sm",
    "md",
    "lg"
];
var Tooltip = (function () {
    function Tooltip() {
        this.visible = false;
        this.anchorPoint = Point.RIGHT_CENTER;
        this.popoverPoint = Point.LEFT_TOP;
        this._tooltipDirection = "right";
        this._tooltipSize = "sm";
    }
    Object.defineProperty(Tooltip.prototype, "direction", {
        get: function () {
            return this._tooltipDirection;
        },
        set: function (direction) {
            if (direction && (tooltipDirections.indexOf(direction) > -1)) {
                this._tooltipDirection = direction;
            }
            else {
                this._tooltipDirection = "right";
            }
            // set the popover values based on direction
            switch (this._tooltipDirection) {
                case ("top-right"):
                    this.anchorPoint = Point.TOP_CENTER;
                    this.popoverPoint = Point.LEFT_BOTTOM;
                    break;
                case ("top-left"):
                    this.anchorPoint = Point.TOP_CENTER;
                    this.popoverPoint = Point.RIGHT_BOTTOM;
                    break;
                case ("bottom-right"):
                    this.anchorPoint = Point.BOTTOM_CENTER;
                    this.popoverPoint = Point.LEFT_TOP;
                    break;
                case ("bottom-left"):
                    this.anchorPoint = Point.BOTTOM_CENTER;
                    this.popoverPoint = Point.RIGHT_TOP;
                    break;
                case ("right"):
                    this.anchorPoint = Point.RIGHT_CENTER;
                    this.popoverPoint = Point.LEFT_TOP;
                    break;
                case ("left"):
                    this.anchorPoint = Point.LEFT_CENTER;
                    this.popoverPoint = Point.RIGHT_TOP;
                    break;
                default:
                    this.anchorPoint = Point.RIGHT_CENTER;
                    this.popoverPoint = Point.LEFT_TOP;
                    break;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Tooltip.prototype, "size", {
        get: function () {
            return this._tooltipSize;
        },
        set: function (size) {
            if (size && (tooltipSizes.indexOf(size) > -1)) {
                this._tooltipSize = size;
            }
            else {
                this._tooltipSize = "md";
            }
        },
        enumerable: true,
        configurable: true
    });
    Tooltip.prototype.onMouseEnter = function () {
        this.visible = true;
    };
    Tooltip.prototype.onMouseLeave = function () {
        this.visible = false;
    };
    return Tooltip;
}());
export { Tooltip };
Tooltip.decorators = [
    { type: Component, args: [{
                selector: "clr-tooltip",
                template: "\n       <a #anchor href=\"javascript://\" role=\"tooltip\" aria-haspopup=\"true\" class=\"tooltip\" \n                [ngClass]=\"'tooltip-' + direction + ' tooltip-' + size\">\n           <ng-content></ng-content>\n           <ng-template [(clrPopover)]=\"visible\" [clrPopoverAnchor]=\"anchor\" [clrPopoverAnchorPoint]=\"anchorPoint\"\n                        [clrPopoverPopoverPoint]=\"popoverPoint\">\n                <span class=\"tooltip-content\">\n                    <ng-content select=\"clr-tooltip-content\"></ng-content>\n                </span>\n           </ng-template>\n        </a>\n    ",
                host: {
                    "(mouseenter)": "onMouseEnter()",
                    "(mouseleave)": "onMouseLeave()"
                }
            },] },
];
/** @nocollapse */
Tooltip.ctorParameters = function () { return []; };
Tooltip.propDecorators = {
    'direction': [{ type: Input, args: ["clrTooltipDirection",] },],
    'size': [{ type: Input, args: ["clrTooltipSize",] },],
};
//# sourceMappingURL=tooltip.js.map