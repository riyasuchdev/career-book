/*
 * Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Component, EventEmitter, Input, Output, ViewChild } from "@angular/core";
import { TabContent } from "../layout/tabs/tab-content";
var WizardPageDeprecated = (function (_super) {
    __extends(WizardPageDeprecated, _super);
    function WizardPageDeprecated() {
        var _this = _super.call(this) || this;
        _this.hasProjectedTitleContent = false;
        // User can bind his event handler for onCommit of the main content
        _this.onCommit = new EventEmitter(false);
        // User can bind his/her event handler for onLoad of the main content
        _this.onLoad = new EventEmitter(false);
        // input variable, optional, to set if this tab is skipped
        _this.isSkipped = false;
        // input variable, optional, to set if this tab is skipped
        _this.preventDefault = false;
        // Emitter for Next button state changes
        _this.nextDisabledChanged = new EventEmitter(false);
        return _this;
    }
    WizardPageDeprecated.prototype.ngOnInit = function () {
        var projectedTitleHTML = this.titleContainer.nativeElement.innerHTML.trim();
        this.hasProjectedTitleContent = projectedTitleHTML.length > 0;
    };
    return WizardPageDeprecated;
}(TabContent));
export { WizardPageDeprecated };
WizardPageDeprecated.decorators = [
    { type: Component, args: [{
                selector: "clr-wizard-page-deprecated",
                template: "\n      <!--\n        ~ Copyright (c) 2016-2017 VMware, Inc. All Rights Reserved.\n        ~ This software is released under MIT license.\n        ~ The full license information can be found in LICENSE in the root directory of this project.\n        -->\n\n      <section>\n          <label #titleContainer class=\"text-light\">\n              {{title}}\n              <ng-content select=\".wizard-page-title\"></ng-content>\n          </label>\n\n          <div class=\"content-wrapper\">\n              <ng-content></ng-content>\n          </div>\n      </section>\n    ",
                host: {
                    "[id]": "id",
                    "[class.clr-nav-content]": "true",
                    "role": "tabpanel",
                    "[attr.aria-hidden]": "!active",
                    "[attr.aria-labelledby]": "ariaLabelledBy",
                    "[attr.data-hidden]": "!active",
                    "[class.active]": "active"
                }
            },] },
];
/** @nocollapse */
WizardPageDeprecated.ctorParameters = function () { return []; };
WizardPageDeprecated.propDecorators = {
    'titleContainer': [{ type: ViewChild, args: ["titleContainer",] },],
    'onCommit': [{ type: Output, args: ["clrWizardPageOnCommit",] },],
    'onLoad': [{ type: Output, args: ["clrWizardPageOnLoad",] },],
    'isSkipped': [{ type: Input, args: ["clrWizardPageIsSkipped",] },],
    'preventDefault': [{ type: Input, args: ["clrWizardPagePreventDefault",] },],
    'nextDisabled': [{ type: Input, args: ["clrWizardPageNextDisabled",] },],
    'errorFlag': [{ type: Input, args: ["clrWizardPageErrorFlag",] },],
    'nextDisabledChanged': [{ type: Output, args: ["clrWizardPageNextDisabledChanged",] },],
};
//# sourceMappingURL=wizard-page.js.map